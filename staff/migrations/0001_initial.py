# Generated by Django 4.2.7 on 2024-02-23 23:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GovernmentAppointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(blank=True, choices=[('ADMINISTRATION', 'ADMINISTRATION'), ('ACCOUNT', 'ACCOUNT'), ('BIO-MEDICAL ENGR', 'BIO-MEDICAL ENGR'), ('CLINICAL SERVICES', 'CLINICAL SERVICES'), ('CATERING', 'CATERING'), ('DISCIPLINE', 'DISCIPLINE'), ('ENGINEERING', 'ENGINEERING'), ('INFORMATION TECH', 'INFORMATION TECH'), ('INTERNAL AUDIT', 'INTERNAL AUDIT'), ('LEGAL', 'LEGAL'), ('LIBRARY', 'LIBRARY'), ('MEDICAL RECORD', 'MEDICAL RECORD'), ('MEDICAL ILLUSTRATION', 'MEDICAL ILLUSTRATION'), ('NURSING EDUCATION', 'NURSING EDUCATION'), ('NURSING SERVICES', 'NURSING SERVICES'), ('PATHOLOGY', 'PATHOLOGY'), ('PHARMACY', 'PHARMACY'), ('PHYSIOTHERAPHY', 'PHYSIOTHERAPHY'), ('PROSTHETIC AND ORTHOTICS', 'PROSTHETIC AND ORTHOTICS'), ('PROCUMENT', 'PROCUMENT'), ('PUBLIC HEALTH', 'PUBLIC HEALTH'), ('OCCUPATIONAL THERAPHY', 'OCCUPATIONAL THERAPHY'), ('RADIOLOGY', 'RADIOLOGY'), ('SERVICOM', 'SERVICOM'), ('SOCIAL WELFARE', 'SOCIAL WELFARE'), ('STORE', 'STORE'), ('TELEPHONE', 'TELEPHONE'), ('TRANSPORT', 'TRANSPORT')], max_length=300, null=True)),
                ('cpost', models.CharField(blank=True, max_length=300, null=True, verbose_name='current post')),
                ('ippis_no', models.DecimalField(blank=True, decimal_places=0, max_digits=6, null=True, unique=True, verbose_name='IPPIS number')),
                ('date_fapt', models.DateField(blank=True, null=True, verbose_name='date of first appointment')),
                ('date_capt', models.DateField(blank=True, null=True, verbose_name='date of current appointment')),
                ('type_of_appt', models.CharField(blank=True, choices=[('CASUAL', 'CASUAL'), ('LOCUM', 'LOCUM'), ('PERMANENT', 'PERMANENT'), ('PROBATION', 'PROBATION')], max_length=300, null=True, verbose_name='type of appointment')),
                ('sfapt', models.FloatField(blank=True, max_length=300, null=True, verbose_name='salary per annum at date of first appointment')),
                ('salary_scale', models.CharField(blank=True, choices=[('CONHESS', 'CONHESS'), ('CONMESS', 'CONMESS'), ('GIPMIS', 'GIPMIS')], max_length=300, null=True)),
                ('grade_level', models.CharField(blank=True, choices=[('03', '03'), ('04', '04'), ('05', '05'), ('06', '06'), ('07', '07'), ('08', '08'), ('09', '09'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15')], max_length=300, null=True)),
                ('step', models.IntegerField(blank=True, null=True)),
                ('type_of_cadre', models.CharField(blank=True, choices=[('JUNIOR', 'JUNIOR'), ('SENIOR', 'SENIOR'), ('EXECUTIVE', 'EXECUTIVE')], max_length=100, null=True)),
                ('exams_status', models.CharField(blank=True, max_length=100, null=True)),
                ('retire', models.BooleanField(default=False)),
                ('rtb', models.CharField(blank=True, max_length=50, null=True, verbose_name='retired by')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date added')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('middle_name', models.CharField(blank=True, max_length=300, null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True, unique=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='')),
                ('file_no', models.DecimalField(blank=True, decimal_places=0, max_digits=6, null=True, unique=True, verbose_name='file number')),
                ('title', models.CharField(blank=True, max_length=300, null=True)),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE')], max_length=10, null=True)),
                ('dob', models.DateField(blank=True, null=True, verbose_name='date of birth')),
                ('phone', models.PositiveIntegerField(blank=True, null=True, unique=True)),
                ('marital_status', models.CharField(blank=True, choices=[('MARRIED', 'MARRIED'), ('SINGLE', 'SINGLE'), ('DIVORCED', 'DIVORCED'), ('DIVORCEE', 'DIVORCEE'), ('WIDOW', 'WIDOW'), ('WIDOWER', 'WIDOWER')], max_length=100, null=True)),
                ('place_of_birth', models.CharField(blank=True, max_length=150, null=True)),
                ('nationality', models.CharField(blank=True, choices=[('NIGERIAN', 'NIGERIAN'), ('NON-CITIZEN', 'NON-CITIZEN')], max_length=200, null=True)),
                ('zone', models.CharField(blank=True, choices=[('NORTH-EAST', 'NORTH-EAST'), ('NORTH-WEST', 'NORTH-WEST'), ('NORTH-CENTRAL', 'NORTH-CENTRAL'), ('SOUTH-EAST', 'SOUTH-EAST'), ('SOUTH-WEST', 'SOUTH-WEST'), ('SOUTH-SOUTH', 'SOUTH-SOUTH')], max_length=300, null=True)),
                ('state', models.CharField(blank=True, max_length=300, null=True)),
                ('lga', models.CharField(blank=True, max_length=300, null=True)),
                ('sen_dist', models.CharField(blank=True, max_length=300, null=True, verbose_name='senatorial district')),
                ('res_add', models.CharField(blank=True, max_length=300, null=True, verbose_name='residential address')),
                ('per_res_addr', models.CharField(blank=True, max_length=300, null=True, verbose_name='permanent residential address')),
                ('spouse', models.CharField(blank=True, max_length=300, null=True)),
                ('hobbies', models.CharField(blank=True, max_length=300, null=True)),
                ('religion', models.CharField(blank=True, choices=[('ISLAM', 'ISLAM'), ('CHRISTIANITY', 'CHRISTIANITY'), ('TRADITIONAL', 'TRADITIONAL')], max_length=100, null=True)),
                ('qual', models.CharField(blank=True, max_length=150, null=True)),
                ('nofc', models.PositiveIntegerField(blank=True, null=True, verbose_name='number of children')),
                ('nameoc', models.TextField(blank=True, max_length=400, null=True, verbose_name='name of children')),
                ('doboc', models.TextField(blank=True, max_length=300, null=True, verbose_name='date of birth of children')),
                ('fnok_name', models.CharField(blank=True, max_length=300, null=True, verbose_name='first next of kin name')),
                ('fnok_phone', models.PositiveIntegerField(blank=True, null=True, verbose_name='first next of kin phone')),
                ('fnok_email', models.EmailField(blank=True, max_length=300, null=True, verbose_name='first next of kin email')),
                ('fnok_addr', models.CharField(blank=True, max_length=300, null=True, verbose_name='first next of kin address')),
                ('fnok_rel', models.CharField(blank=True, max_length=300, null=True, verbose_name='relationship with first next of kin')),
                ('fnok_photo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='first next of kin photo')),
                ('snok_name', models.CharField(blank=True, max_length=300, null=True, verbose_name='second next of kin name')),
                ('snok_phone', models.PositiveIntegerField(blank=True, null=True, verbose_name='second next of kin phone')),
                ('snok_email', models.EmailField(blank=True, max_length=300, null=True, verbose_name='second next of kin email')),
                ('snok_addr', models.CharField(blank=True, max_length=300, null=True, verbose_name='second next of address')),
                ('snok_rel', models.CharField(blank=True, max_length=300, null=True, verbose_name='second next of kin')),
                ('snok_photo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='second next of kin photo')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date added')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Retirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=300, null=True)),
                ('retire', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date added')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('govapp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rtgovapp', to='staff.governmentappointment')),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='staff.profile')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school', models.CharField(blank=True, max_length=300, null=True)),
                ('school_category', models.CharField(blank=True, choices=[('PRIMARY', 'PRIMARY'), ('SECONDARY', 'SECONDARY'), ('COLLEGE OF EDUCATION', 'COLLEGE OF EDUCATION'), ('POLYTECHNIC', 'POLYTECHNIC'), ('UNIVERSITY', 'UNIVERSITY')], max_length=300, null=True)),
                ('qual', models.CharField(blank=True, max_length=300, null=True, verbose_name='qualification')),
                ('date_obtained', models.DateField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date added')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qual', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpost', models.CharField(blank=True, max_length=300, null=True, verbose_name='current post')),
                ('prom_date', models.DateField(blank=True, null=True, verbose_name='promotion date')),
                ('gl', models.PositiveIntegerField(blank=True, null=True, verbose_name='grade level')),
                ('step', models.PositiveIntegerField(blank=True, null=True)),
                ('inc_date', models.DateField(blank=True, null=True, verbose_name='increment date')),
                ('conf_date', models.DateField(blank=True, null=True, verbose_name='confirmation date')),
                ('due', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date added')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('govapp', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='progovapp', to='staff.governmentappointment')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='promotion', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProfessionalQualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institute', models.CharField(blank=True, max_length=300, null=True)),
                ('inst_address', models.CharField(blank=True, max_length=300, null=True, verbose_name='institute address')),
                ('qual_obtained', models.CharField(blank=True, max_length=300, null=True, verbose_name='qualification obtained')),
                ('date_obtained', models.DateField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date added')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pro_qual', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Leave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nature', models.CharField(blank=True, max_length=300, null=True, verbose_name='nature of leave')),
                ('year', models.PositiveIntegerField(blank=True, null=True)),
                ('start_date', models.DateField(null=True)),
                ('total_days', models.PositiveIntegerField(blank=True, null=True)),
                ('balance', models.PositiveIntegerField(blank=True, null=True)),
                ('granted_days', models.PositiveIntegerField(null=True, verbose_name='number of days granted')),
                ('status', models.CharField(blank=True, max_length=300, null=True)),
                ('is_leave_over', models.BooleanField(default=False)),
                ('comment', models.TextField(blank=True, null=True, verbose_name='comments if any')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date added')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leave', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExecutiveAppointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=300, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=300, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date added')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('govapp', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='execgovapp', to='staff.governmentappointment')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='execapp', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offense', models.TextField(blank=True, null=True)),
                ('decision', models.TextField(blank=True, null=True)),
                ('action_date', models.DateField(blank=True, null=True, verbose_name='date of disciplinary action')),
                ('comment', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date added')),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='discipline', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Disciplinaries',
            },
        ),
    ]
